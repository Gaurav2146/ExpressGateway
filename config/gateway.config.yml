http:
  port: 8080
apiEndpoints:
  user:
    host: localhost
    paths:
      - /user
      - /user/*
  order:
    host: localhost
    paths:
      - /order
      - /order/*
  payment:
    host: localhost
    paths:
      - /payment
      - /payment/*
serviceEndpoints:
  userService:
    url: http://localhost:3000
  orderService:
    urls:
      - http://localhost:3000
      - http://localhost:5000
  paymentService:
    urls:
      - http://localhost:6000
      - http://localhost:4000
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - jwt
  - request-transformer
  - rate-limit
pipelines:
  userPipeline:
    apiEndpoints:
      - user
    policies:
      - log:
          - action:
              message: ${req.method} ${req.originalUrl}
      - jwt:
          - action:
              secretOrPublicKey: your_secret_key
              checkCredentialExistence: false
      - request-transformer:
          action:
            body:
              add:
                user: req.user
            headers:
              add:
                user_name: req.user.name
                user_iat: req.user.iat
      - proxy:
          - action:
              serviceEndpoint: userService
              changeOrigin: true
  orderPipeline:
    apiEndpoints:
      - order
    policies:
      - log:
          - action:
              message: ${req.method} ${req.originalUrl}
      - proxy:
          - action:
              serviceEndpoint: orderService
              changeOrigin: true
  paymentPipeline:
    apiEndpoints:
      - payment
    policies:
      - log:
          - action:
              message: ${req.method} ${req.originalUrl}
      - proxy:
          - action:
              serviceEndpoint: paymentService
              changeOrigin: true
